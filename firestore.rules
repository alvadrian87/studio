
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read other user profiles but can only update their own.
    match /users/{userId} {
      allow read;
      allow update: if request.auth.uid == userId;
    }
    
    // Anyone authenticated can read tournaments, events, and matches.
    // Only admins or the creator should be able to write.
    // For simplicity now, we allow any authenticated user to create/update.
    // This should be tightened in production.
    match /tournaments/{tournamentId} {
      allow read;
      // TODO: Restrict write access to admins or tournament creator
      allow write: if request.auth != null;

      // Inscriptions can be created by authenticated users if they are one of the players.
      // They can be read by any authenticated user.
      match /inscriptions/{inscriptionId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid in request.resource.data.jugadoresIds;
        // Add update/delete rules if necessary, e.g., allow players to withdraw.
      }
    }

    match /eventos/{eventId} {
        allow read;
        allow write: if request.auth != null;
    }

    match /matches/{matchId} {
        allow read;
        allow write: if request.auth != null;
    }

    // Invitations logic
    match /invitations/{invitationId} {
      // Allow read if you are the inviter or the invitee
      allow read: if request.auth != null && (request.auth.uid == resource.data.invitadorId || request.auth.uid == resource.data.invitadoId);
      
      // Allow creation if you are the inviter
      allow create: if request.auth != null && request.auth.uid == request.resource.data.invitadorId;
      
      // Allow update (accept/reject) if you are the invitee
      allow update: if request.auth != null && request.auth.uid == resource.data.invitadoId;
    }
    
    // Challenges can be created by any authenticated user for now.
    match /challenges/{challengeId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.retadorId;
        allow read, update: if request.auth != null; // Simplistic, should be refined
    }
  }
}
