
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow create;
      // Allow any authenticated user to read player profiles for leaderboards, challenges, etc.
      // Users can only update their own profile. Admins can update any profile.
      allow read: if request.auth != null;
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }
    
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isAdmin();
    }
    
    // This rule allows operations on any subcollection within a tournament document
    match /tournaments/{tournamentId}/{subcollection}/{docId} {
      allow read, write: if request.auth != null;
    }

    match /challenges/{challengeId} {
        allow create, read: if request.auth != null;
        allow update: if request.auth != null && (resource.data.retadorId == request.auth.uid || resource.data.desafiadoId == request.auth.uid || isAdmin());
        allow delete: if request.auth != null && isAdmin();
    }

    match /matches/{matchId} {
      allow read, create, update: if request.auth != null;
      allow delete: if request.auth != null && isAdmin();
    }

    match /eventos/{eventoId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && isAdmin();
    }
  }
}
