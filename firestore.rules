rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId);
    }
    
    // Tournaments, Events, Inscriptions
    match /tournaments/{tournamentId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Inscriptions subcollection
      match /inscriptions/{inscriptionId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated() && request.auth.uid in request.resource.data.jugadoresIds;
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
    }
    
    match /eventos/{eventId} {
       allow read: if isUserAuthenticated();
       allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Challenges
    match /challenges/{challengeId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserAuthenticated();
      // Allow the challenged player to update (accept/reject)
      allow update: if isUserAuthenticated() && get(/databases/$(database)/documents/tournaments/$(resource.data.torneoId)/inscriptions/$(resource.data.desafiadoId)).data.jugadoresIds.hasAny([request.auth.uid]);
    }
    
    // Matches
    match /matches/{matchId} {
      allow read: if isUserAuthenticated();
      // Allow creation if the user is part of the match
      allow create: if isUserAuthenticated() && request.auth.uid in request.resource.data.jugadoresIds;
      // Only admins can update results for now
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Invitations
    match /invitations/{invitationId} {
      allow read: if isUserAuthenticated() && (request.auth.uid == resource.data.invitadorId || request.auth.uid == resource.data.invitadoId);
      allow create: if isUserAuthenticated() && request.auth.uid == request.resource.data.invitadorId;
      allow update: if isUserAuthenticated() && request.auth.uid == resource.data.invitadoId;
    }
  }
}
