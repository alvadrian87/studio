
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own data, admins can read/write any user data.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth.uid == userId;
    }

    // Admins can manage tournaments and events. Everyone can read.
    match /tournaments/{tournamentId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Rules for subcollections within tournaments
      match /{allChildren=**} {
        allow read, write: if request.auth != null;
      }
    }

    match /eventos/{eventoId} {
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Any authenticated user can create/read challenges.
    // Only involved players or admins can update/delete.
    match /challenges/{challengeId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.retadorId 
                          || request.auth.uid == resource.data.desafiadoId 
                          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Authenticated users can create and update matches.
    match /matches/{matchId} {
      allow read, create, update: if request.auth != null;
    }
  }
}
