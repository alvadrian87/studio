
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    function isUser(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isPlayerInMatch(matchDoc) {
        return isSignedIn() && (request.auth.uid == matchDoc.data.player1Id || request.auth.uid == matchDoc.data.player2Id);
    }

    // Users Collection
    match /users/{userId} {
      allow create: if isSignedIn(); // Any signed in user can create their own profile during signup
      allow read: if isSignedIn(); // Any signed in user can read any user's profile (for display names, avatars etc.)
      allow update: if isUser(userId) || isAdmin(); // A user can update their own profile, or an admin can
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Tournaments and related subcollections
    match /tournaments/{tournamentId} {
      allow read: if true; // Anyone can view tournament details
      allow create, update, delete: if isAdmin(); // Only admins can manage tournaments
      
      // Inscriptions subcollection
      match /inscriptions/{inscriptionId} {
        allow read: if true;
        allow create: if isSignedIn(); // Any signed in user can try to enroll
        allow update, delete: if isAdmin(); // Only admins can modify/remove enrollments
      }
    }

    // Events Collection (assuming it's a top-level collection)
    match /eventos/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Challenges Collection
    match /challenges/{challengeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (isUser(resource.data.retadorId) || isUser(resource.data.desafiadoId) || isAdmin());
      allow delete: if isAdmin();
    }

    // Matches Collection
    match /matches/{matchId} {
      allow read: if true;
      allow create: if isAdmin(); // Matches are created via accepting challenges, but admins can create them manually.
      allow update: if isPlayerInMatch(get(/databases/$(database)/documents/matches/$(matchId))) || isAdmin(); // Players in the match or admins can update it
      allow delete: if isAdmin();
    }
  }
}
    